.\"t
.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "ripcalc" "1" "25 April 2023" "ripcalc 0.1.7" "User Manual"
.hy
.SH NAME
.PP
ripcalc - a tool for network addresses
.SH SYNOPSIS
.PP
\f[B]ripcalc 127.0.0.1\f[R]
.PP
\f[B]ripcalc -4/\[en]ipv4 127.0.0.1\f[R]
.PP
\f[B]ripcalc -6/\[en]ipv6 ::1\f[R]
.PP
\f[B]ripcalc -f/\[en]format \[lq]%a/%c\[rq] 127.0.0.1\f[R]
.PP
\f[B]ripcalc -m/\[en]mask 28 127.0.0.1\f[R]
.PP
\f[B]ripcalc -c/\[en]csv path/to/csv [-i/\[en]field network]
127.0.0.1\f[R]
.PP
\f[B]ripcalc -l/\[en]list 127.0.0.1\f[R]
.PP
\f[B]ripcalc -a/\[en]available\f[R]
.PP
\f[B]ripcalc -s/\[en]file [-] 127.0.0.1\f[R]
.PP
\f[B]ripcalc -e/\[en]encapsulating -s\f[R]
.PP
\f[B]ripcalc -h/\[en]help\f[R]
.SH DESCRIPTION
.PP
\f[B]ripcalc\f[R] can read IPv4/IPv6 addresses from command line or
standard input and output different formats or associated networks from
\f[B]CSV\f[R].
.PP
\f[B]ripcalc\f[R] can format network addresses, find matches in
\f[B]CSV\f[R] or process a list.
.SH CSV
.PP
Network matches can be returned from a \f[B]CSV\f[R].
.IP
.nf
\f[C]
$ cat nets.csv
network,range,owner
rfc1918,192.168.0.0/16,bob
rfc1918,172.16.0.0/12,cliff
rfc1918,10.0.0.0/8,mr nobody
$ ripcalc --csv nets.csv -i range --format \[aq]%{owner}\[rs]n\[aq] 192.168.0.0
bob
\f[R]
.fi
.PP
Addresses can be read via file or from stdin (-):
.IP
.nf
\f[C]
$ cat list
127.0.0.1/28
10.0.0.1/28
192.168.1.1/30
172.18.1.1/30
10.0.0.0/30
$ ripcalc --csv nets.csv -i range --format \[aq]%{range} %{owner}\[rs]n\[aq] -s list
10.0.0.0/8 mr nobody
192.168.0.0/16 bob
172.16.0.0/12 cliff
10.0.0.0/8 mr nobody
\f[R]
.fi
.SH FORMAT
.PP
\f[B]%\f[R] denotes a format control character, followed by one of the
following:
.PP
.TS
tab(@);
l l.
T{
placeholder
T}@T{
effect
T}
_
T{
%a
T}@T{
IP address string
T}
T{
%n
T}@T{
Network address string
T}
T{
%s
T}@T{
Subnet address string
T}
T{
%w
T}@T{
Wildcard address string
T}
T{
%b
T}@T{
Broadcast address string
T}
.TE
.PP
Additional characters prefixing the above placeholder can control the
representation:
.PP
.TS
tab(@);
l l.
T{
placeholder
T}@T{
effect
T}
_
T{
%B
T}@T{
Binary address string
T}
T{
%S
T}@T{
Split binary at network boundary string
T}
T{
%l
T}@T{
Unsigned integer string
T}
T{
%x
T}@T{
Hex address string
T}
.TE
.PP
Other format characters:
.PP
%c | CIDR mask |
.PD 0
.P
.PD
%t | Network size |
.PD 0
.P
.PD
%r | Network reservation information (if available) |
.PD 0
.P
.PD
%% | % |
.PD 0
.P
.PD
| Line break |
.PD 0
.P
.PD
Tab character |
.PP
\f[B]%xa\f[R] gives the address in hex, or \f[B]%Sa\f[R] to return the
binary address, split at the network boundary.
.PP
When using \f[B]CSV\f[R] fields can be matched by \f[B]name\f[R] when
network matched:
.IP
.nf
\f[C]
--format \[aq]%{name}\[aq]
\f[R]
.fi
.PP
When \f[C]-a\f[R] is used, addresses read from \f[C]-s\f[R] will not be
shown when listing \f[C]-l\f[R] a network, showing only available
addresses.
.SH AUTHORS
Ed Neville (ed-ripcalc\[at]s5h.net).
